class Solution(object):
    def numIslands(self, grid):
        """
        :type grid: List[List[str]]
        :rtype: int
        """
        if not grid:
            return 0
        m, n = len(grid), len(grid[0])
        i = 0
        count = 0
        while i < m:
            j = 0
            while j < n:
                if grid[i][j] == '1':
                    count += 1
                    self.change(i,j, grid, m, n)
                j += 1
            i += 1
        return count
                
    
    def change(self, i, j, grid, m, n):
        grid[i][j] = 'S'
        if i + 1 < m and grid[i+1][j] == '1':
            self.change(i+ 1, j, grid, m, n)
        if i - 1 >= 0 and grid[i-1][j] == '1':
            self.change(i- 1, j, grid, m, n)            
        if j + 1 < n and grid[i][j+1] == '1':
            self.change(i, j+1, grid, m, n)
        if j - 1 >= 0 and grid[i][j-1] == '1':
            self.change(i, j-1, grid, m, n)    
